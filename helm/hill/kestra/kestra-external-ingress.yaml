# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: kestra-custom-ingress
#   annotations:
#     cert-manager.io/issuer: "letsencrypt-prod"
# spec:
#   tls:
#   - hosts:
#       - kestra-dev.haile.click
#     secretName: kestra-cert
#   rules:
#   - host: kestra-dev.haile.click
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: kestra-service
#             port:
#               number: 8080
#   ingressClassName: nginx

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: oauth2-proxy
  name: oauth2-proxy
  namespace: argocd-app
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: oauth2-proxy
  template:
    metadata:
      labels:
        k8s-app: oauth2-proxy
    spec:
      containers:
      - args:
        - --provider=github
        - --email-domain=*
        - --upstream=file:///dev/null
        - --http-address=0.0.0.0:4180
        # Register a new application
        # https://github.com/settings/applications/new
        env:
        - name: OAUTH2_PROXY_CLIENT_ID
          value: Ov23li3ym0IsfOSAqB5c
        - name: OAUTH2_PROXY_CLIENT_SECRET
          value: 084df0334f72a04c87c921182ed36bcd669d60c2
        # docker run -ti --rm python:3-alpine python -c 'import secrets,base64; print(base64.b64encode(base64.b64encode(secrets.token_bytes(16))));'
        - name: OAUTH2_PROXY_COOKIE_SECRET
          value: wuiNKuf2++aZJmkOTqQXAg==
        # Recommended: remove email-domain=* in args and set an allowlist
        # - name: OAUTH2_PROXY_GITHUB_USERS
        #   value: alice,bob
        image: quay.io/oauth2-proxy/oauth2-proxy:latest
        imagePullPolicy: Always
        name: oauth2-proxy
        ports:
        - containerPort: 4180
          protocol: TCP
        resources:  
          requests:
            cpu: 200m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 256Mi

---

apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: oauth2-proxy
  name: oauth2-proxy
  namespace: argocd-app
spec:
  ports:
  - name: http
    port: 4180
    protocol: TCP
    targetPort: 4180
  selector:
    k8s-app: oauth2-proxy

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: oauth2-proxy
  namespace: argocd-app
  annotations:
    cert-manager.io/issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  rules:
  - host: kestra-dev.haile.click
    http:
      paths:
      - path: /oauth2
        pathType: Prefix
        backend:
          service:
            name: oauth2-proxy
            port:
              number: 4180
  tls:
  - hosts:
      - kestra-dev.haile.click
    secretName: kestra-cert

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
  name: kestra-custom-ingress
  namespace: argocd-app
spec:
  ingressClassName: nginx
  rules:
  - host: kestra-dev.haile.click
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kestra-service
            port:
              number: 8080